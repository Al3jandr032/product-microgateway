// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/config.proto

package org.wso2.gateway.discovery.config.enforcer;

public final class ConfigProto {
  private ConfigProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_wso2_discovery_config_enforcer_Config_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_wso2_discovery_config_enforcer_Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+wso2/discovery/config/enforcer/config." +
      "proto\022\036wso2.discovery.config.enforcer\032)w" +
      "so2/discovery/config/enforcer/cert.proto" +
      "\032+wso2/discovery/config/enforcer/issuer." +
      "proto\032.wso2/discovery/config/enforcer/ev" +
      "ent_hub.proto\0323wso2/discovery/config/enf" +
      "orcer/am_credentials.proto\0321wso2/discove" +
      "ry/config/enforcer/auth_service.proto\"\212\003" +
      "\n\006Config\022>\n\016jwtTokenConfig\030\001 \003(\0132&.wso2." +
      "discovery.config.enforcer.Issuer\022;\n\010keys" +
      "tore\030\002 \001(\0132).wso2.discovery.config.enfor" +
      "cer.CertStore\022=\n\ntruststore\030\003 \001(\0132).wso2" +
      ".discovery.config.enforcer.CertStore\022:\n\010" +
      "eventhub\030\004 \001(\0132(.wso2.discovery.config.e" +
      "nforcer.EventHub\022@\n\013authService\030\005 \001(\0132+." +
      "wso2.discovery.config.enforcer.AuthServi" +
      "ce\022F\n\017apimCredentials\030\006 \001(\0132-.wso2.disco" +
      "very.config.enforcer.AmCredentialsB\213\001\n*o" +
      "rg.wso2.gateway.discovery.config.enforce" +
      "rB\013ConfigProtoP\001ZNgithub.com/envoyproxy/" +
      "go-control-plane/wso2/discovery/config/e" +
      "nforcer;enforcerb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.wso2.gateway.discovery.config.enforcer.CertStoreProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.IssuerProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.EventHubProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.AmCredentialsProto.getDescriptor(),
          org.wso2.gateway.discovery.config.enforcer.AuthServiceProto.getDescriptor(),
        });
    internal_static_wso2_discovery_config_enforcer_Config_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_wso2_discovery_config_enforcer_Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_wso2_discovery_config_enforcer_Config_descriptor,
        new java.lang.String[] { "JwtTokenConfig", "Keystore", "Truststore", "Eventhub", "AuthService", "ApimCredentials", });
    org.wso2.gateway.discovery.config.enforcer.CertStoreProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.IssuerProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.EventHubProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.AmCredentialsProto.getDescriptor();
    org.wso2.gateway.discovery.config.enforcer.AuthServiceProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
