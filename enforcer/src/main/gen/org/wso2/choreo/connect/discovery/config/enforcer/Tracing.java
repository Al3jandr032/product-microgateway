// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/tracing.proto

package org.wso2.choreo.connect.discovery.config.enforcer;

/**
 * Protobuf type {@code wso2.discovery.config.enforcer.Tracing}
 */
public final class Tracing extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.config.enforcer.Tracing)
    TracingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Tracing.newBuilder() to construct.
  private Tracing(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Tracing() {
    connectionString_ = "";
    instrumentationName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Tracing();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Tracing(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            enabled_ = input.readBool();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            connectionString_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            instrumentationName_ = s;
            break;
          }
          case 32: {

            maximumTracesPerSecond_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.choreo.connect.discovery.config.enforcer.TracingProto.internal_static_wso2_discovery_config_enforcer_Tracing_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.choreo.connect.discovery.config.enforcer.TracingProto.internal_static_wso2_discovery_config_enforcer_Tracing_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.choreo.connect.discovery.config.enforcer.Tracing.class, org.wso2.choreo.connect.discovery.config.enforcer.Tracing.Builder.class);
  }

  public static final int ENABLED_FIELD_NUMBER = 1;
  private boolean enabled_;
  /**
   * <pre>
   * Enable tracing
   * </pre>
   *
   * <code>bool enabled = 1;</code>
   * @return The enabled.
   */
  @java.lang.Override
  public boolean getEnabled() {
    return enabled_;
  }

  public static final int CONNECTIONSTRING_FIELD_NUMBER = 2;
  private volatile java.lang.Object connectionString_;
  /**
   * <pre>
   * Exporter ConnectionString
   * </pre>
   *
   * <code>string connectionString = 2;</code>
   * @return The connectionString.
   */
  @java.lang.Override
  public java.lang.String getConnectionString() {
    java.lang.Object ref = connectionString_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      connectionString_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Exporter ConnectionString
   * </pre>
   *
   * <code>string connectionString = 2;</code>
   * @return The bytes for connectionString.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConnectionStringBytes() {
    java.lang.Object ref = connectionString_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      connectionString_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INSTRUMENTATIONNAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object instrumentationName_;
  /**
   * <pre>
   * Instrumentation Name
   * </pre>
   *
   * <code>string instrumentationName = 3;</code>
   * @return The instrumentationName.
   */
  @java.lang.Override
  public java.lang.String getInstrumentationName() {
    java.lang.Object ref = instrumentationName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      instrumentationName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Instrumentation Name
   * </pre>
   *
   * <code>string instrumentationName = 3;</code>
   * @return The bytes for instrumentationName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInstrumentationNameBytes() {
    java.lang.Object ref = instrumentationName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      instrumentationName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAXIMUMTRACESPERSECOND_FIELD_NUMBER = 4;
  private int maximumTracesPerSecond_;
  /**
   * <pre>
   * Maximum number of sampled traces per second
   * </pre>
   *
   * <code>int32 maximumTracesPerSecond = 4;</code>
   * @return The maximumTracesPerSecond.
   */
  @java.lang.Override
  public int getMaximumTracesPerSecond() {
    return maximumTracesPerSecond_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (enabled_ != false) {
      output.writeBool(1, enabled_);
    }
    if (!getConnectionStringBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, connectionString_);
    }
    if (!getInstrumentationNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, instrumentationName_);
    }
    if (maximumTracesPerSecond_ != 0) {
      output.writeInt32(4, maximumTracesPerSecond_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (enabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, enabled_);
    }
    if (!getConnectionStringBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, connectionString_);
    }
    if (!getInstrumentationNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, instrumentationName_);
    }
    if (maximumTracesPerSecond_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, maximumTracesPerSecond_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.choreo.connect.discovery.config.enforcer.Tracing)) {
      return super.equals(obj);
    }
    org.wso2.choreo.connect.discovery.config.enforcer.Tracing other = (org.wso2.choreo.connect.discovery.config.enforcer.Tracing) obj;

    if (getEnabled()
        != other.getEnabled()) return false;
    if (!getConnectionString()
        .equals(other.getConnectionString())) return false;
    if (!getInstrumentationName()
        .equals(other.getInstrumentationName())) return false;
    if (getMaximumTracesPerSecond()
        != other.getMaximumTracesPerSecond()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnabled());
    hash = (37 * hash) + CONNECTIONSTRING_FIELD_NUMBER;
    hash = (53 * hash) + getConnectionString().hashCode();
    hash = (37 * hash) + INSTRUMENTATIONNAME_FIELD_NUMBER;
    hash = (53 * hash) + getInstrumentationName().hashCode();
    hash = (37 * hash) + MAXIMUMTRACESPERSECOND_FIELD_NUMBER;
    hash = (53 * hash) + getMaximumTracesPerSecond();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.choreo.connect.discovery.config.enforcer.Tracing prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code wso2.discovery.config.enforcer.Tracing}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.config.enforcer.Tracing)
      org.wso2.choreo.connect.discovery.config.enforcer.TracingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.choreo.connect.discovery.config.enforcer.TracingProto.internal_static_wso2_discovery_config_enforcer_Tracing_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.choreo.connect.discovery.config.enforcer.TracingProto.internal_static_wso2_discovery_config_enforcer_Tracing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.choreo.connect.discovery.config.enforcer.Tracing.class, org.wso2.choreo.connect.discovery.config.enforcer.Tracing.Builder.class);
    }

    // Construct using org.wso2.choreo.connect.discovery.config.enforcer.Tracing.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      enabled_ = false;

      connectionString_ = "";

      instrumentationName_ = "";

      maximumTracesPerSecond_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.choreo.connect.discovery.config.enforcer.TracingProto.internal_static_wso2_discovery_config_enforcer_Tracing_descriptor;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.Tracing getDefaultInstanceForType() {
      return org.wso2.choreo.connect.discovery.config.enforcer.Tracing.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.Tracing build() {
      org.wso2.choreo.connect.discovery.config.enforcer.Tracing result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.config.enforcer.Tracing buildPartial() {
      org.wso2.choreo.connect.discovery.config.enforcer.Tracing result = new org.wso2.choreo.connect.discovery.config.enforcer.Tracing(this);
      result.enabled_ = enabled_;
      result.connectionString_ = connectionString_;
      result.instrumentationName_ = instrumentationName_;
      result.maximumTracesPerSecond_ = maximumTracesPerSecond_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.choreo.connect.discovery.config.enforcer.Tracing) {
        return mergeFrom((org.wso2.choreo.connect.discovery.config.enforcer.Tracing)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.choreo.connect.discovery.config.enforcer.Tracing other) {
      if (other == org.wso2.choreo.connect.discovery.config.enforcer.Tracing.getDefaultInstance()) return this;
      if (other.getEnabled() != false) {
        setEnabled(other.getEnabled());
      }
      if (!other.getConnectionString().isEmpty()) {
        connectionString_ = other.connectionString_;
        onChanged();
      }
      if (!other.getInstrumentationName().isEmpty()) {
        instrumentationName_ = other.instrumentationName_;
        onChanged();
      }
      if (other.getMaximumTracesPerSecond() != 0) {
        setMaximumTracesPerSecond(other.getMaximumTracesPerSecond());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.choreo.connect.discovery.config.enforcer.Tracing parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.choreo.connect.discovery.config.enforcer.Tracing) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean enabled_ ;
    /**
     * <pre>
     * Enable tracing
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }
    /**
     * <pre>
     * Enable tracing
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     * @param value The enabled to set.
     * @return This builder for chaining.
     */
    public Builder setEnabled(boolean value) {
      
      enabled_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enable tracing
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnabled() {
      
      enabled_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object connectionString_ = "";
    /**
     * <pre>
     * Exporter ConnectionString
     * </pre>
     *
     * <code>string connectionString = 2;</code>
     * @return The connectionString.
     */
    public java.lang.String getConnectionString() {
      java.lang.Object ref = connectionString_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectionString_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Exporter ConnectionString
     * </pre>
     *
     * <code>string connectionString = 2;</code>
     * @return The bytes for connectionString.
     */
    public com.google.protobuf.ByteString
        getConnectionStringBytes() {
      java.lang.Object ref = connectionString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectionString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Exporter ConnectionString
     * </pre>
     *
     * <code>string connectionString = 2;</code>
     * @param value The connectionString to set.
     * @return This builder for chaining.
     */
    public Builder setConnectionString(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      connectionString_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Exporter ConnectionString
     * </pre>
     *
     * <code>string connectionString = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectionString() {
      
      connectionString_ = getDefaultInstance().getConnectionString();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Exporter ConnectionString
     * </pre>
     *
     * <code>string connectionString = 2;</code>
     * @param value The bytes for connectionString to set.
     * @return This builder for chaining.
     */
    public Builder setConnectionStringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      connectionString_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object instrumentationName_ = "";
    /**
     * <pre>
     * Instrumentation Name
     * </pre>
     *
     * <code>string instrumentationName = 3;</code>
     * @return The instrumentationName.
     */
    public java.lang.String getInstrumentationName() {
      java.lang.Object ref = instrumentationName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        instrumentationName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Instrumentation Name
     * </pre>
     *
     * <code>string instrumentationName = 3;</code>
     * @return The bytes for instrumentationName.
     */
    public com.google.protobuf.ByteString
        getInstrumentationNameBytes() {
      java.lang.Object ref = instrumentationName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        instrumentationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Instrumentation Name
     * </pre>
     *
     * <code>string instrumentationName = 3;</code>
     * @param value The instrumentationName to set.
     * @return This builder for chaining.
     */
    public Builder setInstrumentationName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      instrumentationName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Instrumentation Name
     * </pre>
     *
     * <code>string instrumentationName = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInstrumentationName() {
      
      instrumentationName_ = getDefaultInstance().getInstrumentationName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Instrumentation Name
     * </pre>
     *
     * <code>string instrumentationName = 3;</code>
     * @param value The bytes for instrumentationName to set.
     * @return This builder for chaining.
     */
    public Builder setInstrumentationNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      instrumentationName_ = value;
      onChanged();
      return this;
    }

    private int maximumTracesPerSecond_ ;
    /**
     * <pre>
     * Maximum number of sampled traces per second
     * </pre>
     *
     * <code>int32 maximumTracesPerSecond = 4;</code>
     * @return The maximumTracesPerSecond.
     */
    @java.lang.Override
    public int getMaximumTracesPerSecond() {
      return maximumTracesPerSecond_;
    }
    /**
     * <pre>
     * Maximum number of sampled traces per second
     * </pre>
     *
     * <code>int32 maximumTracesPerSecond = 4;</code>
     * @param value The maximumTracesPerSecond to set.
     * @return This builder for chaining.
     */
    public Builder setMaximumTracesPerSecond(int value) {
      
      maximumTracesPerSecond_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Maximum number of sampled traces per second
     * </pre>
     *
     * <code>int32 maximumTracesPerSecond = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaximumTracesPerSecond() {
      
      maximumTracesPerSecond_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.config.enforcer.Tracing)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.config.enforcer.Tracing)
  private static final org.wso2.choreo.connect.discovery.config.enforcer.Tracing DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.choreo.connect.discovery.config.enforcer.Tracing();
  }

  public static org.wso2.choreo.connect.discovery.config.enforcer.Tracing getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Tracing>
      PARSER = new com.google.protobuf.AbstractParser<Tracing>() {
    @java.lang.Override
    public Tracing parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Tracing(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Tracing> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Tracing> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.choreo.connect.discovery.config.enforcer.Tracing getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

