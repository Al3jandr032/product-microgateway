/*
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
syntax = "proto3";

package envoy.extensions.filters.http.mgw_websocket.v3;

import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";

option java_package = "org.wso2.micro.gateway.enforcer.websocket";
option java_outer_classname = "MgwWebSocketProto";
option java_multiple_files = true;

message Metadata {
  // Key is the reverse DNS filter name, e.g. com.acme.widget. The envoy.*
  // namespace is reserved for Envoy's built-in filters.
  map<string, google.protobuf.Struct> filter_metadata = 1;
}

message RateLimitRequest{
  // Can be interpreted as the label name assigned to envoy instances.
  string domain = 1;

  Metadata metadata_context = 2;
}

message RateLimitResponse{

  enum Code {
    // The response code is not known.
    UNKNOWN = 0;
    // The response code to notify that the number of requests are under limit.
    OK = 1;
    // The response code to notify that the number of requests are over limit.
    OVER_LIMIT = 2;
  }

  Code overall_code = 1;

}

service WebSocketMetadataService{
  rpc publishMetadata(stream RateLimitRequest) returns (stream RateLimitResponse){

  }
}